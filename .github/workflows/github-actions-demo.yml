name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
    # Runs this when a PR against master is created
    pull_request:
      branches: [ "main" ]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      # Installs flutter and related dependency on this machine
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          # flutter-version: '3.16.8'
          # ^ If you want to use a specific version of flutter
      
      # Fetches proj dependencies from pub
      - name: Install dependencies
        run: flutter pub get
        # ^ If you want to use a specific version of flutter
      
      # Verifies if the dart code is formatted well
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
        # --set-exit-if-changed stops execution if the any code is not well formatted
        # --output=none prints files which needs to be formatted
      
      # Checks for Symantic errors. Can be configured using analysis_options.yaml
      - name: Analyze project source
        run: flutter analyze
        # optionally use --fatal-warnings to stop execution if any warnings are found

      # Runs unit test
      - name: Run tests
        run: flutter test
  Explore-Cloud-Run:
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Configure GCP Project
        run: gcloud config set project ${{ secrets.GCP_PROJECT_ID }} 

      - name: Build and Push Docker Image
        run: |
          IMAGE=europe-west3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REGISTRY }}/flutter-app-runner:v1.0.5
          docker build -t $IMAGE .
          docker push $IMAGE
  
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy team${{ secrets.TEAM_NUMBER }}-app \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/team${{ secrets.TEAM_NUMBER }}-app \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --domain team${{ secrets.TEAM_NUMBER }}.myworkshop.co
